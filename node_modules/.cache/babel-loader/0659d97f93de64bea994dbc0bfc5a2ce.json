{"ast":null,"code":"import { __assign, __spreadArrays } from \"tslib\";\nimport { __rest } from \"tslib\";\nexport function concatPagination(keyArgs) {\n  if (keyArgs === void 0) {\n    keyArgs = false;\n  }\n\n  return {\n    keyArgs: keyArgs,\n    merge: function (existing, incoming) {\n      return existing ? __spreadArrays(existing, incoming) : incoming;\n    }\n  };\n}\nexport function offsetLimitPagination(keyArgs) {\n  if (keyArgs === void 0) {\n    keyArgs = false;\n  }\n\n  return {\n    keyArgs: keyArgs,\n    merge: function (existing, incoming, _a) {\n      var args = _a.args;\n      var merged = existing ? existing.slice(0) : [];\n      var start = args ? args.offset : merged.length;\n      var end = start + incoming.length;\n\n      for (var i = start; i < end; ++i) {\n        merged[i] = incoming[i - start];\n      }\n\n      return merged;\n    }\n  };\n}\nexport function relayStylePagination(keyArgs) {\n  if (keyArgs === void 0) {\n    keyArgs = false;\n  }\n\n  return {\n    keyArgs: keyArgs,\n    read: function (existing, _a) {\n      var canRead = _a.canRead,\n          readField = _a.readField;\n      if (!existing) return;\n      var edges = [];\n      var startCursor = \"\";\n      var endCursor = \"\";\n      existing.wrappers.forEach(function (wrapper) {\n        if (canRead(readField(\"node\", wrapper.edge))) {\n          edges.push(wrapper.edge);\n\n          if (wrapper.cursor) {\n            startCursor = startCursor || wrapper.cursor;\n            endCursor = wrapper.cursor;\n          }\n        }\n      });\n      return __assign(__assign({}, getExtras(existing)), {\n        edges: edges,\n        pageInfo: __assign(__assign({}, existing.pageInfo), {\n          startCursor: startCursor,\n          endCursor: endCursor\n        })\n      });\n    },\n    merge: function (existing, incoming, _a) {\n      if (existing === void 0) {\n        existing = makeEmptyData();\n      }\n\n      var args = _a.args,\n          readField = _a.readField;\n      var incomingWrappers = incoming.edges ? incoming.edges.map(function (edge) {\n        return {\n          edge: edge,\n          cursor: readField(\"cursor\", edge)\n        };\n      }) : [];\n\n      if (incoming.pageInfo) {\n        var _b = incoming.pageInfo,\n            startCursor = _b.startCursor,\n            endCursor = _b.endCursor;\n        var firstWrapper_1 = incomingWrappers[0];\n\n        if (firstWrapper_1 && startCursor) {\n          firstWrapper_1.cursor = startCursor;\n        }\n\n        var lastWrapper_1 = incomingWrappers[incomingWrappers.length - 1];\n\n        if (lastWrapper_1 && endCursor) {\n          lastWrapper_1.cursor = endCursor;\n        }\n      }\n\n      var prefix = existing.wrappers;\n      var suffix = [];\n\n      if (args && args.after) {\n        var index = prefix.findIndex(function (wrapper) {\n          return wrapper.cursor === args.after;\n        });\n\n        if (index >= 0) {\n          prefix = prefix.slice(0, index + 1);\n        }\n      } else if (args && args.before) {\n        var index = prefix.findIndex(function (wrapper) {\n          return wrapper.cursor === args.before;\n        });\n        suffix = index < 0 ? prefix : prefix.slice(index);\n        prefix = [];\n      } else if (incoming.edges) {\n        prefix = [];\n      }\n\n      var wrappers = __spreadArrays(prefix, incomingWrappers, suffix);\n\n      var firstWrapper = wrappers[0];\n      var lastWrapper = wrappers[wrappers.length - 1];\n\n      var pageInfo = __assign(__assign(__assign({}, incoming.pageInfo), existing.pageInfo), {\n        startCursor: firstWrapper && firstWrapper.cursor || \"\",\n        endCursor: lastWrapper && lastWrapper.cursor || \"\"\n      });\n\n      if (incoming.pageInfo) {\n        var _c = incoming.pageInfo,\n            hasPreviousPage = _c.hasPreviousPage,\n            hasNextPage = _c.hasNextPage;\n\n        if (!prefix.length && hasPreviousPage !== void 0) {\n          pageInfo.hasPreviousPage = hasPreviousPage;\n        }\n\n        if (!suffix.length && hasNextPage !== void 0) {\n          pageInfo.hasNextPage = hasNextPage;\n        }\n      }\n\n      return __assign(__assign(__assign({}, getExtras(existing)), getExtras(incoming)), {\n        wrappers: wrappers,\n        pageInfo: pageInfo\n      });\n    }\n  };\n}\n\nvar getExtras = function (obj) {\n  return __rest(obj, notExtras);\n};\n\nvar notExtras = [\"edges\", \"wrappers\", \"pageInfo\"];\n\nfunction makeEmptyData() {\n  return {\n    wrappers: [],\n    pageInfo: {\n      hasPreviousPage: false,\n      hasNextPage: true,\n      startCursor: \"\",\n      endCursor: \"\"\n    }\n  };\n}","map":{"version":3,"sources":["../../../src/utilities/policies/pagination.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __spreadArrays } from \"tslib\";\nimport { __rest } from \"tslib\";\nexport function concatPagination(keyArgs) {\n    if (keyArgs === void 0) { keyArgs = false; }\n    return {\n        keyArgs: keyArgs,\n        merge: function (existing, incoming) {\n            return existing ? __spreadArrays(existing, incoming) : incoming;\n        },\n    };\n}\nexport function offsetLimitPagination(keyArgs) {\n    if (keyArgs === void 0) { keyArgs = false; }\n    return {\n        keyArgs: keyArgs,\n        merge: function (existing, incoming, _a) {\n            var args = _a.args;\n            var merged = existing ? existing.slice(0) : [];\n            var start = args ? args.offset : merged.length;\n            var end = start + incoming.length;\n            for (var i = start; i < end; ++i) {\n                merged[i] = incoming[i - start];\n            }\n            return merged;\n        },\n    };\n}\nexport function relayStylePagination(keyArgs) {\n    if (keyArgs === void 0) { keyArgs = false; }\n    return {\n        keyArgs: keyArgs,\n        read: function (existing, _a) {\n            var canRead = _a.canRead, readField = _a.readField;\n            if (!existing)\n                return;\n            var edges = [];\n            var startCursor = \"\";\n            var endCursor = \"\";\n            existing.wrappers.forEach(function (wrapper) {\n                if (canRead(readField(\"node\", wrapper.edge))) {\n                    edges.push(wrapper.edge);\n                    if (wrapper.cursor) {\n                        startCursor = startCursor || wrapper.cursor;\n                        endCursor = wrapper.cursor;\n                    }\n                }\n            });\n            return __assign(__assign({}, getExtras(existing)), { edges: edges, pageInfo: __assign(__assign({}, existing.pageInfo), { startCursor: startCursor,\n                    endCursor: endCursor }) });\n        },\n        merge: function (existing, incoming, _a) {\n            if (existing === void 0) { existing = makeEmptyData(); }\n            var args = _a.args, readField = _a.readField;\n            var incomingWrappers = incoming.edges ? incoming.edges.map(function (edge) { return ({\n                edge: edge,\n                cursor: readField(\"cursor\", edge),\n            }); }) : [];\n            if (incoming.pageInfo) {\n                var _b = incoming.pageInfo, startCursor = _b.startCursor, endCursor = _b.endCursor;\n                var firstWrapper_1 = incomingWrappers[0];\n                if (firstWrapper_1 && startCursor) {\n                    firstWrapper_1.cursor = startCursor;\n                }\n                var lastWrapper_1 = incomingWrappers[incomingWrappers.length - 1];\n                if (lastWrapper_1 && endCursor) {\n                    lastWrapper_1.cursor = endCursor;\n                }\n            }\n            var prefix = existing.wrappers;\n            var suffix = [];\n            if (args && args.after) {\n                var index = prefix.findIndex(function (wrapper) { return wrapper.cursor === args.after; });\n                if (index >= 0) {\n                    prefix = prefix.slice(0, index + 1);\n                }\n            }\n            else if (args && args.before) {\n                var index = prefix.findIndex(function (wrapper) { return wrapper.cursor === args.before; });\n                suffix = index < 0 ? prefix : prefix.slice(index);\n                prefix = [];\n            }\n            else if (incoming.edges) {\n                prefix = [];\n            }\n            var wrappers = __spreadArrays(prefix, incomingWrappers, suffix);\n            var firstWrapper = wrappers[0];\n            var lastWrapper = wrappers[wrappers.length - 1];\n            var pageInfo = __assign(__assign(__assign({}, incoming.pageInfo), existing.pageInfo), { startCursor: firstWrapper && firstWrapper.cursor || \"\", endCursor: lastWrapper && lastWrapper.cursor || \"\" });\n            if (incoming.pageInfo) {\n                var _c = incoming.pageInfo, hasPreviousPage = _c.hasPreviousPage, hasNextPage = _c.hasNextPage;\n                if (!prefix.length && hasPreviousPage !== void 0) {\n                    pageInfo.hasPreviousPage = hasPreviousPage;\n                }\n                if (!suffix.length && hasNextPage !== void 0) {\n                    pageInfo.hasNextPage = hasNextPage;\n                }\n            }\n            return __assign(__assign(__assign({}, getExtras(existing)), getExtras(incoming)), { wrappers: wrappers,\n                pageInfo: pageInfo });\n        },\n    };\n}\nvar getExtras = function (obj) { return __rest(obj, notExtras); };\nvar notExtras = [\"edges\", \"wrappers\", \"pageInfo\"];\nfunction makeEmptyData() {\n    return {\n        wrappers: [],\n        pageInfo: {\n            hasPreviousPage: false,\n            hasNextPage: true,\n            startCursor: \"\",\n            endCursor: \"\",\n        },\n    };\n}\n//# sourceMappingURL=pagination.js.map"]},"metadata":{},"sourceType":"module"}