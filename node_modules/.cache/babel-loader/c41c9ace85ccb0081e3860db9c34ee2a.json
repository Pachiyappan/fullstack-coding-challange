{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  mutation create($id: ID!, $name: String!) {\\n    updateSkill(input: { id: $id, name: $name }) {\\n      id\\n      name\\n    }\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  mutation create($name: String!) {\\n    createSkill(input: { name: $name }) {\\n      id\\n      name\\n    }\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  query MyQuery {\\n    listSkills {\\n      items {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useState}from\"react\";import{useQuery,useMutation,gql}from\"@apollo/client\";import{API,graphqlOperation}from\"aws-amplify\";import{createStyles,makeStyles}from\"@material-ui/core/styles\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableContainer from\"@material-ui/core/TableContainer\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import Paper from\"@material-ui/core/Paper\";import{Delete,Edit}from\"@material-ui/icons\";import{EditSkill}from\"./EditSkill\";import{DialogModal}from\"../common\";import{Typography,Toolbar}from\"@material-ui/core\";import{PrimaryButton,EmptyMessage}from\"../common\";var useStyles=makeStyles(function(theme){return createStyles({tableCont:{marginLeft:theme.spacing(3),marginRight:theme.spacing(3),width:\"auto\"},table:{minWidth:650},tableHeader:{background:\"#3f51b52e\"},headerCell:{fontSize:\"20px\",fontWeight:600},header:{flexGrow:1,marginTop:theme.spacing(2),marginBottom:theme.spacing(2)}});});export var GET_SKILLS=gql(_templateObject());var ADD_SKILL=gql(_templateObject2());var UPDATE_SKILL=gql(_templateObject3());var Skills=function Skills(props){var _data$listSkills,_data$listSkills2;var classes=useStyles();var _useQuery=useQuery(GET_SKILLS),data=_useQuery.data,refetch=_useQuery.refetch;var _useMutation=useMutation(ADD_SKILL),_useMutation2=_slicedToArray(_useMutation,1),addSkill=_useMutation2[0];var _useMutation3=useMutation(UPDATE_SKILL),_useMutation4=_slicedToArray(_useMutation3,1),updateSkill=_useMutation4[0];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpenEditDialog=_useState2[0],setOpenEditDialog=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),isDelete=_useState4[0],setDelete=_useState4[1];var history=props.history,params=props.match.params;useEffect(function(){if(params.id){setOpenEditDialog(true);}},[params]);var handleClose=function handleClose(){setOpenEditDialog(false);history.push(\"/skills\");};var handleDelete=function handleDelete(id){setDelete(id);};var saveSkill=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(skillName){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(params.action===\"edit\"){updateSkill({variables:{id:params.id,name:skillName}});}else{addSkill({variables:{name:skillName}});}refetch();handleClose();case 3:case\"end\":return _context.stop();}}},_callee);}));return function saveSkill(_x){return _ref.apply(this,arguments);};}();var onDelete=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var deleteEmployee;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:deleteEmployee=\"mutation{\\n      deleteSkill(input: {id: \\\"\".concat(isDelete,\"\\\"}) {\\n      id\\n    } \\n  }\");_context2.next=3;return API.graphql(graphqlOperation(deleteEmployee)).then(function(res){setDelete(null);refetch();});case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function onDelete(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Toolbar,null,/*#__PURE__*/React.createElement(Typography,{className:classes.header,variant:\"h5\",color:\"inherit\"},\"Skills\"),/*#__PURE__*/React.createElement(PrimaryButton,{text:\"Add New\",onClick:function onClick(){return history.push(\"/skills/new\");}})),/*#__PURE__*/React.createElement(TableContainer,{className:classes.tableCont,component:Paper},/*#__PURE__*/React.createElement(Table,{className:classes.table,\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHead,{className:classes.tableHeader},/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.headerCell},\"Skill Name\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.headerCell,align:\"right\"},\"Actions\"))),(data===null||data===void 0?void 0:(_data$listSkills=data.listSkills)===null||_data$listSkills===void 0?void 0:_data$listSkills.items.length)?/*#__PURE__*/React.createElement(TableBody,null,data===null||data===void 0?void 0:(_data$listSkills2=data.listSkills)===null||_data$listSkills2===void 0?void 0:_data$listSkills2.items.map(function(row){return/*#__PURE__*/React.createElement(TableRow,{key:row.id},/*#__PURE__*/React.createElement(TableCell,{component:\"th\",scope:\"row\"},row===null||row===void 0?void 0:row.name),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},/*#__PURE__*/React.createElement(Edit,{onClick:function onClick(){return history.push(\"/skills/\".concat(row.id,\"/edit\"));}}),/*#__PURE__*/React.createElement(Delete,{onClick:function onClick(){return handleDelete(row.id);}})));})):/*#__PURE__*/React.createElement(EmptyMessage,{message:\"No data found\"}))),isOpenEditDialog&&/*#__PURE__*/React.createElement(EditSkill,Object.assign({isOpen:isOpenEditDialog,handleClose:handleClose,onSave:saveSkill},props)),isDelete&&/*#__PURE__*/React.createElement(DialogModal,{isOpen:!!isDelete,handleCancel:function handleCancel(){return handleDelete(null);},onConfirm:onDelete}));};export{Skills};","map":{"version":3,"sources":["/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/src/components/pages/Skills.js"],"names":["React","useEffect","useState","useQuery","useMutation","gql","API","graphqlOperation","createStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Delete","Edit","EditSkill","DialogModal","Typography","Toolbar","PrimaryButton","EmptyMessage","useStyles","theme","tableCont","marginLeft","spacing","marginRight","width","table","minWidth","tableHeader","background","headerCell","fontSize","fontWeight","header","flexGrow","marginTop","marginBottom","GET_SKILLS","ADD_SKILL","UPDATE_SKILL","Skills","props","classes","data","refetch","addSkill","updateSkill","isOpenEditDialog","setOpenEditDialog","isDelete","setDelete","history","params","match","id","handleClose","push","handleDelete","saveSkill","skillName","action","variables","name","onDelete","deleteEmployee","graphql","then","res","listSkills","items","length","map","row"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport { EditSkill } from \"./EditSkill\";\nimport { DialogModal } from \"../common\";\nimport { Typography, Toolbar } from \"@material-ui/core\";\nimport { PrimaryButton, EmptyMessage } from \"../common\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    tableCont: {\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3),\n      width: \"auto\",\n    },\n    table: {\n      minWidth: 650,\n    },\n    tableHeader: {\n      background: \"#3f51b52e\",\n    },\n    headerCell: {\n      fontSize: \"20px\",\n      fontWeight: 600,\n    },\n    header: {\n      flexGrow: 1,\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n    },\n  })\n);\n\nexport const GET_SKILLS = gql`\n  query MyQuery {\n    listSkills {\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\nconst ADD_SKILL = gql`\n  mutation create($name: String!) {\n    createSkill(input: { name: $name }) {\n      id\n      name\n    }\n  }\n`;\nconst UPDATE_SKILL = gql`\n  mutation create($id: ID!, $name: String!) {\n    updateSkill(input: { id: $id, name: $name }) {\n      id\n      name\n    }\n  }\n`;\nconst Skills = (props) => {\n  const classes = useStyles();\n  const { data, refetch } = useQuery(GET_SKILLS);\n  const [addSkill] = useMutation(ADD_SKILL);\n  const [updateSkill] = useMutation(UPDATE_SKILL);\n  const [isOpenEditDialog, setOpenEditDialog] = useState(false);\n  const [isDelete, setDelete] = useState(null);\n  const {\n    history,\n    match: { params },\n  } = props;\n\n  useEffect(() => {\n    if (params.id) {\n      setOpenEditDialog(true);\n    }\n  }, [params]);\n\n  const handleClose = () => {\n    setOpenEditDialog(false);\n    history.push(`/skills`);\n  };\n\n  const handleDelete = (id) => {\n    setDelete(id);\n  };\n\n  const saveSkill = async (skillName) => {\n    if (params.action === \"edit\") {\n      updateSkill({ variables: { id: params.id, name: skillName } });\n    } else {\n      addSkill({ variables: { name: skillName } });\n    }\n    refetch();\n    handleClose();\n  };\n  const onDelete = async () => {\n    const deleteEmployee = `mutation{\n      deleteSkill(input: {id: \"${isDelete}\"}) {\n      id\n    } \n  }`;\n    await API.graphql(graphqlOperation(deleteEmployee)).then((res) => {\n      setDelete(null);\n      refetch();\n    });\n  };\n  return (\n    <div>\n      <Toolbar>\n        <Typography className={classes.header} variant=\"h5\" color=\"inherit\">\n          Skills\n        </Typography>\n        <PrimaryButton\n          text=\"Add New\"\n          onClick={() => history.push(`/skills/new`)}\n        />\n      </Toolbar>\n      <TableContainer className={classes.tableCont} component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead className={classes.tableHeader}>\n            <TableRow>\n              <TableCell className={classes.headerCell}>Skill Name</TableCell>\n              <TableCell className={classes.headerCell} align=\"right\">\n                Actions\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {data?.listSkills?.items.length ? (\n            <TableBody>\n              {data?.listSkills?.items.map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row?.name}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Edit\n                      onClick={() => history.push(`/skills/${row.id}/edit`)}\n                    />\n                    <Delete onClick={() => handleDelete(row.id)} />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          ) : (\n            <EmptyMessage message=\"No data found\" />\n          )}\n        </Table>\n      </TableContainer>\n      {isOpenEditDialog && (\n        <EditSkill\n          isOpen={isOpenEditDialog}\n          handleClose={handleClose}\n          onSave={saveSkill}\n          {...props}\n        />\n      )}\n      {isDelete && (\n        <DialogModal\n          isOpen={!!isDelete}\n          handleCancel={() => handleDelete(null)}\n          onConfirm={onDelete}\n        />\n      )}\n    </div>\n  );\n};\nexport { Skills };\n"]},"metadata":{},"sourceType":"module"}