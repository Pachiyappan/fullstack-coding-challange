{"ast":null,"code":"var _jsxFileName = \"/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/src/components/pages/Skills.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport { EditSkill } from \"./EditSkill\";\nimport { DialogModal } from \"../common\";\nimport { Typography, Toolbar } from \"@material-ui/core\";\nimport { PrimaryButton, EmptyMessage } from \"../common\";\nconst useStyles = makeStyles(theme => createStyles({\n  tableCont: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    width: \"auto\"\n  },\n  table: {\n    minWidth: 650\n  },\n  tableHeader: {\n    background: \"#3f51b52e\"\n  },\n  headerCell: {\n    fontSize: \"20px\",\n    fontWeight: 600\n  },\n  header: {\n    flexGrow: 1,\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\nexport const GET_SKILLS = gql`\n  query MyQuery {\n    listSkills {\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\nconst ADD_SKILL = gql`\n  mutation create($name: String!) {\n    createSkill(input: { name: $name }) {\n      id\n      name\n    }\n  }\n`;\nconst UPDATE_SKILL = gql`\n  mutation create($id: ID!, $name: String!) {\n    updateSkill(input: { id: $id, name: $name }) {\n      id\n      name\n    }\n  }\n`;\n\nconst Skills = props => {\n  var _data$listSkills, _data$listSkills2;\n\n  const classes = useStyles();\n  const {\n    data,\n    refetch\n  } = useQuery(GET_SKILLS);\n  const [addSkill] = useMutation(ADD_SKILL);\n  const [updateSkill] = useMutation(UPDATE_SKILL);\n  const [isOpenEditDialog, setOpenEditDialog] = useState(false);\n  const [isDelete, setDelete] = useState(null);\n  const {\n    history,\n    match: {\n      params\n    }\n  } = props;\n  useEffect(() => {\n    if (params.id) {\n      setOpenEditDialog(true);\n    }\n  }, [params]);\n\n  const handleClose = () => {\n    setOpenEditDialog(false);\n    history.push(`/skills`);\n  };\n\n  const handleDelete = id => {\n    setDelete(id);\n  };\n\n  const saveSkill = async skillName => {\n    if (params.action === \"edit\") {\n      updateSkill({\n        variables: {\n          id: params.id,\n          name: skillName\n        }\n      });\n    } else {\n      addSkill({\n        variables: {\n          name: skillName\n        }\n      });\n    }\n\n    refetch();\n    handleClose();\n  };\n\n  const onDelete = async () => {\n    const deleteEmployee = `mutation{\n      deleteSkill(input: {id: \"${isDelete}\"}) {\n      id\n    } \n  }`;\n    await API.graphql(graphqlOperation(deleteEmployee)).then(res => {\n      setDelete(null);\n      refetch();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.header,\n    variant: \"h5\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Skills\"), /*#__PURE__*/React.createElement(PrimaryButton, {\n    text: \"Add New\",\n    onClick: () => history.push(`/skills/new`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.tableCont,\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    className: classes.tableHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.headerCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"Skill Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.headerCell,\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), (data === null || data === void 0 ? void 0 : (_data$listSkills = data.listSkills) === null || _data$listSkills === void 0 ? void 0 : _data$listSkills.items.length) ? /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$listSkills2 = data.listSkills) === null || _data$listSkills2 === void 0 ? void 0 : _data$listSkills2.items.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, row === null || row === void 0 ? void 0 : row.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    onClick: () => history.push(`/skills/${row.id}/edit`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Delete, {\n    onClick: () => handleDelete(row.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }))))) : /*#__PURE__*/React.createElement(EmptyMessage, {\n    message: \"No data found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }))), isOpenEditDialog && /*#__PURE__*/React.createElement(EditSkill, Object.assign({\n    isOpen: isOpenEditDialog,\n    handleClose: handleClose,\n    onSave: saveSkill\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  })), isDelete && /*#__PURE__*/React.createElement(DialogModal, {\n    isOpen: !!isDelete,\n    handleCancel: () => handleDelete(null),\n    onConfirm: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport { Skills };","map":{"version":3,"sources":["/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/src/components/pages/Skills.js"],"names":["React","useEffect","useState","useQuery","useMutation","gql","API","graphqlOperation","createStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Delete","Edit","EditSkill","DialogModal","Typography","Toolbar","PrimaryButton","EmptyMessage","useStyles","theme","tableCont","marginLeft","spacing","marginRight","width","table","minWidth","tableHeader","background","headerCell","fontSize","fontWeight","header","flexGrow","marginTop","marginBottom","GET_SKILLS","ADD_SKILL","UPDATE_SKILL","Skills","props","classes","data","refetch","addSkill","updateSkill","isOpenEditDialog","setOpenEditDialog","isDelete","setDelete","history","match","params","id","handleClose","push","handleDelete","saveSkill","skillName","action","variables","name","onDelete","deleteEmployee","graphql","then","res","listSkills","items","length","map","row"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport { EditSkill } from \"./EditSkill\";\nimport { DialogModal } from \"../common\";\nimport { Typography, Toolbar } from \"@material-ui/core\";\nimport { PrimaryButton, EmptyMessage } from \"../common\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    tableCont: {\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3),\n      width: \"auto\",\n    },\n    table: {\n      minWidth: 650,\n    },\n    tableHeader: {\n      background: \"#3f51b52e\",\n    },\n    headerCell: {\n      fontSize: \"20px\",\n      fontWeight: 600,\n    },\n    header: {\n      flexGrow: 1,\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n    },\n  })\n);\n\nexport const GET_SKILLS = gql`\n  query MyQuery {\n    listSkills {\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\nconst ADD_SKILL = gql`\n  mutation create($name: String!) {\n    createSkill(input: { name: $name }) {\n      id\n      name\n    }\n  }\n`;\nconst UPDATE_SKILL = gql`\n  mutation create($id: ID!, $name: String!) {\n    updateSkill(input: { id: $id, name: $name }) {\n      id\n      name\n    }\n  }\n`;\nconst Skills = (props) => {\n  const classes = useStyles();\n  const { data, refetch } = useQuery(GET_SKILLS);\n  const [addSkill] = useMutation(ADD_SKILL);\n  const [updateSkill] = useMutation(UPDATE_SKILL);\n  const [isOpenEditDialog, setOpenEditDialog] = useState(false);\n  const [isDelete, setDelete] = useState(null);\n  const {\n    history,\n    match: { params },\n  } = props;\n\n  useEffect(() => {\n    if (params.id) {\n      setOpenEditDialog(true);\n    }\n  }, [params]);\n\n  const handleClose = () => {\n    setOpenEditDialog(false);\n    history.push(`/skills`);\n  };\n\n  const handleDelete = (id) => {\n    setDelete(id);\n  };\n\n  const saveSkill = async (skillName) => {\n    if (params.action === \"edit\") {\n      updateSkill({ variables: { id: params.id, name: skillName } });\n    } else {\n      addSkill({ variables: { name: skillName } });\n    }\n    refetch();\n    handleClose();\n  };\n  const onDelete = async () => {\n    const deleteEmployee = `mutation{\n      deleteSkill(input: {id: \"${isDelete}\"}) {\n      id\n    } \n  }`;\n    await API.graphql(graphqlOperation(deleteEmployee)).then((res) => {\n      setDelete(null);\n      refetch();\n    });\n  };\n  return (\n    <div>\n      <Toolbar>\n        <Typography className={classes.header} variant=\"h5\" color=\"inherit\">\n          Skills\n        </Typography>\n        <PrimaryButton\n          text=\"Add New\"\n          onClick={() => history.push(`/skills/new`)}\n        />\n      </Toolbar>\n      <TableContainer className={classes.tableCont} component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead className={classes.tableHeader}>\n            <TableRow>\n              <TableCell className={classes.headerCell}>Skill Name</TableCell>\n              <TableCell className={classes.headerCell} align=\"right\">\n                Actions\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {data?.listSkills?.items.length ? (\n            <TableBody>\n              {data?.listSkills?.items.map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row?.name}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Edit\n                      onClick={() => history.push(`/skills/${row.id}/edit`)}\n                    />\n                    <Delete onClick={() => handleDelete(row.id)} />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          ) : (\n            <EmptyMessage message=\"No data found\" />\n          )}\n        </Table>\n      </TableContainer>\n      {isOpenEditDialog && (\n        <EditSkill\n          isOpen={isOpenEditDialog}\n          handleClose={handleClose}\n          onSave={saveSkill}\n          {...props}\n        />\n      )}\n      {isDelete && (\n        <DialogModal\n          isOpen={!!isDelete}\n          handleCancel={() => handleDelete(null)}\n          onConfirm={onDelete}\n        />\n      )}\n    </div>\n  );\n};\nexport { Skills };\n"]},"metadata":{},"sourceType":"module"}