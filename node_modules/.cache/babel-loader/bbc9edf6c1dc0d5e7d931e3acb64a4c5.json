{"ast":null,"code":"var _jsxFileName = \"/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/src/components/pages/EditSkill.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { isEmpty } from \"lodash\";\n\nconst EditSkill = props => {\n  const [skillName, setSkillName] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const {\n    isOpen,\n    onSave,\n    handleClose,\n    match: {\n      params\n    }\n  } = props;\n  useEffect(() => {\n    if (params.id) {\n      if (params.action === \"edit\") {\n        getSkillById(params.id);\n      }\n    }\n  }, []);\n\n  const getSkillById = async id => {\n    var _data$getSkill;\n\n    console.log(id);\n    const getQuery = `query{\n        getSkill(id: \"${id}\") {\n            id\n            name\n        }\n    }`;\n    const {\n      data\n    } = await API.graphql(graphqlOperation(getQuery));\n    setSkillName(data === null || data === void 0 ? void 0 : (_data$getSkill = data.getSkill) === null || _data$getSkill === void 0 ? void 0 : _data$getSkill.name);\n  };\n\n  const onSubmit = () => {\n    if (isEmpty(skillName)) {\n      setIsError(true);\n      return;\n    }\n\n    onSave(skillName);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: isOpen,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, params.action === \"edit\" ? \"Update\" : \"Create new\", \" skill\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: isError,\n    id: \"standard-error-helper-text\",\n    autoFocus: true,\n    value: skillName,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Skill Name\",\n    onChange: e => setSkillName(e.target.value),\n    type: \"text\",\n    helperText: \"Please enter skill.\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: onSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n};\n\nexport { EditSkill };","map":{"version":3,"sources":["/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/src/components/pages/EditSkill.js"],"names":["React","useEffect","useState","API","graphqlOperation","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","isEmpty","EditSkill","props","skillName","setSkillName","isError","setIsError","isOpen","onSave","handleClose","match","params","id","action","getSkillById","console","log","getQuery","data","graphql","getSkill","name","onSubmit","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { isEmpty } from \"lodash\";\n\nconst EditSkill = (props) => {\n  const [skillName, setSkillName] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const {\n    isOpen,\n    onSave,\n    handleClose,\n    match: { params },\n  } = props;\n  useEffect(() => {\n    if (params.id) {\n      if (params.action === \"edit\") {\n        getSkillById(params.id);\n      }\n    }\n  }, []);\n\n  const getSkillById = async (id) => {\n    console.log(id);\n    const getQuery = `query{\n        getSkill(id: \"${id}\") {\n            id\n            name\n        }\n    }`;\n    const { data } = await API.graphql(graphqlOperation(getQuery));\n    setSkillName(data?.getSkill?.name);\n  };\n\n  const onSubmit = () => {\n    if (isEmpty(skillName)) {\n      setIsError(true);\n      return;\n    }\n    onSave(skillName);\n  };\n  return (\n    <div>\n      <Dialog\n        open={isOpen}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {params.action === \"edit\" ? \"Update\" : \"Create new\"} skill\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            error={isError}\n            id=\"standard-error-helper-text\"\n            autoFocus\n            value={skillName}\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Skill Name\"\n            onChange={(e) => setSkillName(e.target.value)}\n            type=\"text\"\n            helperText=\"Please enter skill.\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" onClick={onSubmit} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport { EditSkill };\n"]},"metadata":{},"sourceType":"module"}