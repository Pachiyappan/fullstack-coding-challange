{"ast":null,"code":"var _jsxFileName = \"/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/src/components/pages/Employees.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport { EditEmployee } from \"./EditEmployees\";\nimport { DialogModal } from \"../common\";\nimport { Typography, Toolbar } from \"@material-ui/core\";\nimport { PrimaryButton, EmptyMessage } from \"../common\";\nconst useStyles = makeStyles(theme => createStyles({\n  tableCont: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    width: \"auto\"\n  },\n  table: {\n    minWidth: 650\n  },\n  tableHeader: {\n    background: \"#3f51b52e\"\n  },\n  headerCell: {\n    fontSize: \"20px\",\n    fontWeight: 600\n  },\n  header: {\n    flexGrow: 1,\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\nexport const GET_EMPLOYEES = gql`\n  query {\n    listEmployees {\n      items {\n        createdAt\n        firstName\n        id\n        lastName\n        updatedAt\n        skills {\n          id\n          name\n          updatedAt\n          createdAt\n        }\n      }\n    }\n  }\n`;\nconst ADD_EMPLOYEE = gql`\n  mutation create(\n    $employeeSkillsId: ID\n    $firstName: String!\n    $lastName: String!\n  ) {\n    createEmployee(\n      input: {\n        employeeSkillsId: $employeeSkillsId\n        firstName: $firstName\n        lastName: $lastName\n      }\n    ) {\n      firstName\n      id\n      lastName\n      updatedAt\n      createdAt\n    }\n  }\n`;\nconst UPDATE_EMPLOYEE = gql`\n  mutation update(\n    $id: ID!\n    $employeeSkillsId: ID\n    $firstName: String!\n    $lastName: String!\n  ) {\n    updateEmployee(\n      input: {\n        id: $id\n        employeeSkillsId: $employeeSkillsId\n        firstName: $firstName\n        lastName: $lastName\n      }\n    ) {\n      firstName\n      id\n      lastName\n      updatedAt\n      createdAt\n    }\n  }\n`;\n\nconst Employees = props => {\n  var _data$listEmployees, _data$listEmployees2;\n\n  const classes = useStyles();\n  const {\n    data,\n    refetch\n  } = useQuery(GET_EMPLOYEES);\n  const [addEmployee] = useMutation(ADD_EMPLOYEE);\n  const [updateEmployee] = useMutation(UPDATE_EMPLOYEE);\n  const [isOpenEditDialog, setOpenEditDialog] = useState(false);\n  const [isDelete, setDelete] = useState(null);\n  const {\n    history,\n    match: {\n      params\n    }\n  } = props;\n  useEffect(() => {\n    if (params.id) {\n      setOpenEditDialog(true);\n    }\n  }, [params]);\n\n  const handleClose = () => {\n    setOpenEditDialog(false);\n    history.push(`/employees`);\n  };\n\n  const handleDelete = id => {\n    setDelete(id);\n  };\n\n  const saveEmployee = async data => {\n    if (params.action === \"edit\") {\n      updateEmployee({\n        variables: {\n          id: params.id,\n          firstName: data === null || data === void 0 ? void 0 : data.firstName,\n          lastName: data === null || data === void 0 ? void 0 : data.lastName,\n          employeeSkillsId: data === null || data === void 0 ? void 0 : data.employeeSkillsId\n        }\n      });\n    } else {\n      addEmployee({\n        variables: {\n          firstName: data === null || data === void 0 ? void 0 : data.firstName,\n          lastName: data === null || data === void 0 ? void 0 : data.lastName,\n          employeeSkillsId: data === null || data === void 0 ? void 0 : data.employeeSkillsId\n        }\n      });\n    }\n\n    refetch();\n    handleClose();\n  };\n\n  const onDelete = async () => {\n    const deleteEmployee = `mutation{\n      deleteEmployee(input: {id: \"${isDelete}\"}) {\n      id\n    } \n  }`;\n    await API.graphql(graphqlOperation(deleteEmployee)).then(res => {\n      setDelete(null);\n    });\n    refetch();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.header,\n    variant: \"h5\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"Employees\"), /*#__PURE__*/React.createElement(PrimaryButton, {\n    text: \"Add New\",\n    onClick: () => history.push(`/employees/new`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.tableCont,\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    className: classes.tableHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.headerCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.headerCell,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \"Skills\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.headerCell,\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), (data === null || data === void 0 ? void 0 : (_data$listEmployees = data.listEmployees) === null || _data$listEmployees === void 0 ? void 0 : _data$listEmployees.items.length) ? /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$listEmployees2 = data.listEmployees) === null || _data$listEmployees2 === void 0 ? void 0 : _data$listEmployees2.items.map(row => {\n    var _row$skills;\n\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, `${row === null || row === void 0 ? void 0 : row.firstName} ${row === null || row === void 0 ? void 0 : row.lastName}`), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, row === null || row === void 0 ? void 0 : (_row$skills = row.skills) === null || _row$skills === void 0 ? void 0 : _row$skills.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      onClick: () => history.push(`/employees/${row.id}/edit`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Delete, {\n      onClick: () => handleDelete(row.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    })));\n  })) : /*#__PURE__*/React.createElement(EmptyMessage, {\n    message: \"No data found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }))), isOpenEditDialog && /*#__PURE__*/React.createElement(EditEmployee, Object.assign({\n    isOpen: isOpenEditDialog,\n    handleClose: handleClose,\n    onSave: saveEmployee\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  })), isDelete && /*#__PURE__*/React.createElement(DialogModal, {\n    isOpen: !!isDelete,\n    handleCancel: () => handleDelete(null),\n    onConfirm: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport { Employees };","map":{"version":3,"sources":["/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/src/components/pages/Employees.js"],"names":["React","useEffect","useState","useQuery","useMutation","gql","API","graphqlOperation","createStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Delete","Edit","EditEmployee","DialogModal","Typography","Toolbar","PrimaryButton","EmptyMessage","useStyles","theme","tableCont","marginLeft","spacing","marginRight","width","table","minWidth","tableHeader","background","headerCell","fontSize","fontWeight","header","flexGrow","marginTop","marginBottom","GET_EMPLOYEES","ADD_EMPLOYEE","UPDATE_EMPLOYEE","Employees","props","classes","data","refetch","addEmployee","updateEmployee","isOpenEditDialog","setOpenEditDialog","isDelete","setDelete","history","match","params","id","handleClose","push","handleDelete","saveEmployee","action","variables","firstName","lastName","employeeSkillsId","onDelete","deleteEmployee","graphql","then","res","listEmployees","items","length","map","row","skills","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport { EditEmployee } from \"./EditEmployees\";\nimport { DialogModal } from \"../common\";\nimport { Typography, Toolbar } from \"@material-ui/core\";\nimport { PrimaryButton, EmptyMessage } from \"../common\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    tableCont: {\n      marginLeft: theme.spacing(3),\n      marginRight: theme.spacing(3),\n      width: \"auto\",\n    },\n    table: {\n      minWidth: 650,\n    },\n    tableHeader: {\n      background: \"#3f51b52e\",\n    },\n    headerCell: {\n      fontSize: \"20px\",\n      fontWeight: 600,\n    },\n    header: {\n      flexGrow: 1,\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n    },\n  })\n);\n\nexport const GET_EMPLOYEES = gql`\n  query {\n    listEmployees {\n      items {\n        createdAt\n        firstName\n        id\n        lastName\n        updatedAt\n        skills {\n          id\n          name\n          updatedAt\n          createdAt\n        }\n      }\n    }\n  }\n`;\nconst ADD_EMPLOYEE = gql`\n  mutation create(\n    $employeeSkillsId: ID\n    $firstName: String!\n    $lastName: String!\n  ) {\n    createEmployee(\n      input: {\n        employeeSkillsId: $employeeSkillsId\n        firstName: $firstName\n        lastName: $lastName\n      }\n    ) {\n      firstName\n      id\n      lastName\n      updatedAt\n      createdAt\n    }\n  }\n`;\n\nconst UPDATE_EMPLOYEE = gql`\n  mutation update(\n    $id: ID!\n    $employeeSkillsId: ID\n    $firstName: String!\n    $lastName: String!\n  ) {\n    updateEmployee(\n      input: {\n        id: $id\n        employeeSkillsId: $employeeSkillsId\n        firstName: $firstName\n        lastName: $lastName\n      }\n    ) {\n      firstName\n      id\n      lastName\n      updatedAt\n      createdAt\n    }\n  }\n`;\n\nconst Employees = (props) => {\n  const classes = useStyles();\n  const { data, refetch } = useQuery(GET_EMPLOYEES);\n  const [addEmployee] = useMutation(ADD_EMPLOYEE);\n  const [updateEmployee] = useMutation(UPDATE_EMPLOYEE);\n  const [isOpenEditDialog, setOpenEditDialog] = useState(false);\n  const [isDelete, setDelete] = useState(null);\n  const {\n    history,\n    match: { params },\n  } = props;\n\n  useEffect(() => {\n    if (params.id) {\n      setOpenEditDialog(true);\n    }\n  }, [params]);\n\n  const handleClose = () => {\n    setOpenEditDialog(false);\n    history.push(`/employees`);\n  };\n\n  const handleDelete = (id) => {\n    setDelete(id);\n  };\n  const saveEmployee = async (data) => {\n    if (params.action === \"edit\") {\n      updateEmployee({\n        variables: {\n          id: params.id,\n          firstName: data?.firstName,\n          lastName: data?.lastName,\n          employeeSkillsId: data?.employeeSkillsId,\n        },\n      });\n    } else {\n      addEmployee({\n        variables: {\n          firstName: data?.firstName,\n          lastName: data?.lastName,\n          employeeSkillsId: data?.employeeSkillsId,\n        },\n      });\n    }\n    refetch();\n    handleClose();\n  };\n  const onDelete = async () => {\n    const deleteEmployee = `mutation{\n      deleteEmployee(input: {id: \"${isDelete}\"}) {\n      id\n    } \n  }`;\n    await API.graphql(graphqlOperation(deleteEmployee)).then((res) => {\n      setDelete(null);\n    });\n    refetch();\n  };\n\n  return (\n    <div>\n      <Toolbar>\n        <Typography className={classes.header} variant=\"h5\" color=\"inherit\">\n          Employees\n        </Typography>\n        <PrimaryButton\n          text=\"Add New\"\n          onClick={() => history.push(`/employees/new`)}\n        />\n      </Toolbar>\n      <TableContainer className={classes.tableCont} component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead className={classes.tableHeader}>\n            <TableRow>\n              <TableCell className={classes.headerCell}>Name</TableCell>\n              <TableCell className={classes.headerCell} align=\"center\">\n                Skills\n              </TableCell>\n              <TableCell className={classes.headerCell} align=\"right\">\n                Actions\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          {data?.listEmployees?.items.length ? (\n            <TableBody>\n              {data?.listEmployees?.items.map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {`${row?.firstName} ${row?.lastName}`}\n                  </TableCell>\n                  <TableCell align=\"center\">{row?.skills?.name}</TableCell>\n                  <TableCell align=\"right\">\n                    <Edit\n                      onClick={() => history.push(`/employees/${row.id}/edit`)}\n                    />\n                    <Delete onClick={() => handleDelete(row.id)} />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          ) : (\n            <EmptyMessage message=\"No data found\" />\n          )}\n        </Table>\n      </TableContainer>\n      {isOpenEditDialog && (\n        <EditEmployee\n          isOpen={isOpenEditDialog}\n          handleClose={handleClose}\n          onSave={saveEmployee}\n          {...props}\n        />\n      )}\n      {isDelete && (\n        <DialogModal\n          isOpen={!!isDelete}\n          handleCancel={() => handleDelete(null)}\n          onConfirm={onDelete}\n        />\n      )}\n    </div>\n  );\n};\nexport { Employees };\n"]},"metadata":{},"sourceType":"module"}