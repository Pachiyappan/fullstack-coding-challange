{"ast":null,"code":"import _defineProperty from\"/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{API,graphqlOperation}from\"aws-amplify\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import{isEmpty}from\"lodash\";var EditSkill=function EditSkill(props){var _React$createElement;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),skillName=_useState2[0],setSkillName=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isError=_useState4[0],setIsError=_useState4[1];var isOpen=props.isOpen,onSave=props.onSave,handleClose=props.handleClose,params=props.match.params;useEffect(function(){if(params.id){if(params.action===\"edit\"){getSkillById(params.id);}}},[]);var getSkillById=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var _data$getSkill;var getQuery,_yield$API$graphql,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(id);getQuery=\"query{\\n        getSkill(id: \\\"\".concat(id,\"\\\") {\\n            id\\n            name\\n        }\\n    }\");_context.next=4;return API.graphql(graphqlOperation(getQuery));case 4:_yield$API$graphql=_context.sent;data=_yield$API$graphql.data;setSkillName(data===null||data===void 0?void 0:(_data$getSkill=data.getSkill)===null||_data$getSkill===void 0?void 0:_data$getSkill.name);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getSkillById(_x){return _ref.apply(this,arguments);};}();var onSubmit=function onSubmit(){if(isEmpty(skillName)){setIsError(true);return;}onSave(skillName);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Dialog,{open:isOpen,onClose:handleClose,\"aria-labelledby\":\"form-dialog-title\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"form-dialog-title\"},params.action===\"edit\"?\"Update\":\"Create new\",\" skill\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(TextField,(_React$createElement={error:isError,id:\"standard-error-helper-text\",autoFocus:true,value:skillName,margin:\"dense\"},_defineProperty(_React$createElement,\"id\",\"name\"),_defineProperty(_React$createElement,\"label\",\"Skill Name\"),_defineProperty(_React$createElement,\"onChange\",function onChange(e){return setSkillName(e.target.value);}),_defineProperty(_React$createElement,\"type\",\"text\"),_defineProperty(_React$createElement,\"helperText\",\"Please enter skill.\"),_defineProperty(_React$createElement,\"fullWidth\",true),_React$createElement))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose,color:\"primary\"},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{type:\"submit\",onClick:onSubmit,color:\"primary\"},\"Save\"))));};export{EditSkill};","map":{"version":3,"sources":["/Users/pachihhil/Projects/BuildOps/fullstack-coding-challange/src/components/pages/EditSkill.js"],"names":["React","useEffect","useState","API","graphqlOperation","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","isEmpty","EditSkill","props","skillName","setSkillName","isError","setIsError","isOpen","onSave","handleClose","params","match","id","action","getSkillById","console","log","getQuery","graphql","data","getSkill","name","onSubmit","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { isEmpty } from \"lodash\";\n\nconst EditSkill = (props) => {\n  const [skillName, setSkillName] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const {\n    isOpen,\n    onSave,\n    handleClose,\n    match: { params },\n  } = props;\n  useEffect(() => {\n    if (params.id) {\n      if (params.action === \"edit\") {\n        getSkillById(params.id);\n      }\n    }\n  }, []);\n\n  const getSkillById = async (id) => {\n    console.log(id);\n    const getQuery = `query{\n        getSkill(id: \"${id}\") {\n            id\n            name\n        }\n    }`;\n    const { data } = await API.graphql(graphqlOperation(getQuery));\n    setSkillName(data?.getSkill?.name);\n  };\n\n  const onSubmit = () => {\n    if (isEmpty(skillName)) {\n      setIsError(true);\n      return;\n    }\n    onSave(skillName);\n  };\n  return (\n    <div>\n      <Dialog\n        open={isOpen}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {params.action === \"edit\" ? \"Update\" : \"Create new\"} skill\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            error={isError}\n            id=\"standard-error-helper-text\"\n            autoFocus\n            value={skillName}\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Skill Name\"\n            onChange={(e) => setSkillName(e.target.value)}\n            type=\"text\"\n            helperText=\"Please enter skill.\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" onClick={onSubmit} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport { EditSkill };\n"]},"metadata":{},"sourceType":"module"}